"""Add Role for User

Revision ID: faa414b2e278
Revises: cde0b952f697
Create Date: 2025-02-07 14:10:28.068118

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "faa414b2e278"
down_revision: Union[str, None] = "cde0b952f697"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("ix_friendship_friend_id", table_name="friendship")
    op.drop_index("ix_friendship_user_id", table_name="friendship")
    op.drop_table("friendship")
    choices_role_enum = postgresql.ENUM(
        "platform_admin", "school_admin", "teacher", "student", name="choicesrole"
    )
    choices_role_enum.create(op.get_bind(), checkfirst=True)

    # Add the 'role' column to the 'users' table
    op.add_column(
        "users",
        sa.Column(
            "role",
            sa.Enum(
                "platform_admin",
                "school_admin",
                "teacher",
                "student",
                name="choicesrole",
            ),
            server_default="student",
            nullable=False,
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("users", "role")
    op.create_table(
        "friendship",
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("friend_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "status",
            postgresql.ENUM("PENDING", "ACCEPTED", name="choicesstatus"),
            server_default=sa.text("'PENDING'::choicesstatus"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["friend_id"],
            ["users.id"],
            name="fk_friendship_friend_id_users",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name="fk_friendship_user_id_users",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("user_id", "friend_id", name="pk_friendship"),
    )
    op.create_index("ix_friendship_user_id", "friendship", ["user_id"], unique=False)
    op.create_index(
        "ix_friendship_friend_id", "friendship", ["friend_id"], unique=False
    )
    # ### end Alembic commands ###
